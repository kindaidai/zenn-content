"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getChapters = exports.getChapter = exports.getBooks = exports.getBook = void 0;
var books_1 = require("../../lib/books");
var helper_1 = require("../../../common/helper");
var bookNotFoundMessage = '本の設定ファイルの取得時にエラーが発生しました。ターミナルの出力をご確認ください';
function getBook(req, res) {
    var slug = req.params.slug;
    var book = books_1.getLocalBook(slug);
    if (!book) {
        res.status(404).json({
            message: bookNotFoundMessage,
        });
        return;
    }
    res.json({ book: book });
}
exports.getBook = getBook;
function getBooks(req, res) {
    var sort = helper_1.getValidSortTypes(req.query.sort);
    var books = books_1.getLocalBookMetaList(sort);
    res.json({ books: books });
}
exports.getBooks = getBooks;
function getChapter(req, res) {
    var bookSlug = req.params.book_slug;
    var book = books_1.getLocalBookMeta(bookSlug);
    if (!book) {
        res.status(404).json({
            message: bookNotFoundMessage,
        });
        return;
    }
    var chapterFilename = req.params.chapter_filename;
    var chapter = books_1.getLocalChapter(book, chapterFilename);
    if (!chapter) {
        res
            .status(404)
            .json({ message: 'チャプターのマークダウンを取得できませんでした' });
        return;
    }
    res.json({ chapter: chapter });
}
exports.getChapter = getChapter;
function getChapters(req, res) {
    var bookSlug = req.params.book_slug;
    var book = books_1.getLocalBookMeta(bookSlug);
    if (!book) {
        res.status(404).json({
            message: bookNotFoundMessage,
        });
        return;
    }
    var chapters = books_1.getLocalChapterMetaList(book);
    res.json({ chapters: chapters });
}
exports.getChapters = getChapters;
