"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.exec = void 0;
var Log = __importStar(require("../lib/log"));
var helper_1 = require("../lib/helper");
var messages_1 = require("../lib/messages");
var arg_1 = __importDefault(require("arg"));
function parseArgs(argv) {
    try {
        return arg_1.default({
            // Types
            '--help': Boolean,
            // Alias
            '-h': '--help',
        }, { argv: argv });
    }
    catch (err) {
        if (err.code === 'ARG_UNKNOWN_OPTION') {
            Log.error(messages_1.invalidOptionText);
        }
        else {
            Log.error('ÂºïÊï∞„ÅÆ„Éë„Éº„ÇπÊôÇ„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü');
            console.log(err);
        }
        console.log(messages_1.initHelpText);
        process.exit(0);
    }
}
var exec = function (argv) {
    var args = parseArgs(argv);
    if (args['--help']) {
        console.log(messages_1.initHelpText);
        return;
    }
    var mkDirNames = ['articles', 'books'];
    // generate directories
    mkDirNames.forEach(function (dirName) {
        var createFilePath = helper_1.getWorkingPath(dirName + "/.keep");
        try {
            helper_1.generateFileIfNotExist(createFilePath, '');
        }
        catch (e) {
            console.log("Generating " + dirName + " skipped.");
        }
    });
    // generate .gitignore
    try {
        helper_1.generateFileIfNotExist(helper_1.getWorkingPath('.gitignore'), ['node_modules', '.DS_Store'].join('\n'));
    }
    catch (e) {
        console.log("Generating .gitignore skipped.");
    }
    // generate README.md
    try {
        helper_1.generateFileIfNotExist(helper_1.getWorkingPath('README.md'), [
            '# Zenn CLI\n',
            '* [üìò How to use](https://zenn.dev/zenn/articles/zenn-cli-guide)',
        ].join('\n'));
    }
    catch (e) {
        console.log("Generating README.md skipped.");
    }
    console.log("\n  \uD83C\uDF89  Done!\n  \u65E9\u901F\u30B3\u30F3\u30C6\u30F3\u30C4\u3092\u4F5C\u6210\u3057\u307E\u3057\u3087\u3046\n\n  \uD83D\uDC47  \u65B0\u3057\u3044\u8A18\u4E8B\u3092\u4F5C\u6210\u3059\u308B\n  $ zenn new:article\n\n  \uD83D\uDC47  \u65B0\u3057\u3044\u672C\u3092\u4F5C\u6210\u3059\u308B\n  $ zenn new:book\n\n  \uD83D\uDC47  \u6295\u7A3F\u3092\u30D7\u30EC\u30D3\u30E5\u30FC\u3059\u308B\n  $ zenn preview\n  ");
};
exports.exec = exec;
