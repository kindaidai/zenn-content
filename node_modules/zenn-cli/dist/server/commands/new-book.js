"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.exec = void 0;
var arg_1 = __importDefault(require("arg"));
var helper_1 = require("../lib/helper");
var messages_1 = require("../lib/messages");
var helper_2 = require("../../common/helper");
var Log = __importStar(require("../lib/log"));
function parseArgs(argv) {
    try {
        return arg_1.default({
            // Types
            '--slug': String,
            '--title': String,
            '--published': String,
            '--summary': String,
            '--price': Number,
            '--help': Boolean,
            // Alias
            '-h': '--help',
        }, { argv: argv });
    }
    catch (err) {
        if (err.code === 'ARG_UNKNOWN_OPTION') {
            Log.error(messages_1.invalidOptionText);
        }
        else {
            Log.error('引数のパース時にエラーが発生しました');
            console.log(err);
        }
        console.log(messages_1.newBookHelpText);
        process.exit(0);
    }
}
var exec = function (argv) {
    var args = parseArgs(argv);
    if (!args)
        return;
    if (args['--help']) {
        console.log(messages_1.newBookHelpText);
        return;
    }
    var slug = args['--slug'] || helper_1.generateSlug();
    var title = args['--title'] || '';
    var summary = args['--summary'] || '';
    var published = args['--published'] === 'true' ? 'true' : 'false'; // デフォルトはfalse
    var price = args['--price'] || 0; // デフォルトは¥0
    if (!helper_2.validateSlug(slug)) {
        Log.error(helper_2.getSlugErrorMessage(slug));
        return process.exit(1);
    }
    var configYamlBody = [
        "title: \"" + title.replace(/"/g, '\\"') + "\"",
        "summary: \"" + summary.replace(/"/g, '\\"') + "\"",
        'topics: []',
        "published: " + published,
        "price: " + price + " # \u6709\u6599\u306E\u5834\u5408200\u301C5000",
        "# \u672C\u306B\u542B\u3081\u308B\u30C1\u30E3\u30D7\u30BF\u30FC\u3092\u9806\u756A\u306B\u4E26\u3079\u307E\u3057\u3087\u3046",
        "chapters:",
        "  - example1",
        "  - example2",
    ].join('\n') + '\n';
    var relativeConfigYamlPath = "books/" + slug + "/config.yaml";
    var configYamlPath = helper_1.getWorkingPath(relativeConfigYamlPath);
    try {
        helper_1.generateFileIfNotExist(configYamlPath, configYamlBody);
        Log.created(relativeConfigYamlPath);
    }
    catch (err) {
        Log.error('config.yamlの作成時にエラーが発生しました');
        console.error(err);
        return process.exit(1);
    }
    var initialChapterBody = ['---', 'title: ""', '---'].join('\n') + '\n';
    ['example1.md', 'example2.md'].forEach(function (chapterFileName) {
        try {
            var relativeChapterFilePath = "books/" + slug + "/" + chapterFileName;
            helper_1.generateFileIfNotExist(helper_1.getWorkingPath(relativeChapterFilePath), initialChapterBody);
            Log.created(relativeChapterFilePath);
        }
        catch (err) {
            Log.error("\u30C1\u30E3\u30D7\u30BF\u30FC\u306E\u30D5\u30A1\u30A4\u30EB\u4F5C\u6210\u6642\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F");
            console.error(err);
            process.exit(1);
        }
    });
};
exports.exec = exec;
