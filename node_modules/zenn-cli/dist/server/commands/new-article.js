"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.exec = void 0;
var arg_1 = __importDefault(require("arg"));
var Log = __importStar(require("../lib/log"));
var helper_1 = require("../lib/helper");
var helper_2 = require("../../common/helper");
var messages_1 = require("../lib/messages");
var pickRandomEmoji = function () {
    // prettier-ignore
    var emojiList = ["😺", "📘", "📚", "📑", "😊", "😎", "👻", "🤖", "😸", "😽", "💨", "💬", "💭", "👋", "👌", "👏", "🙌", "🙆", "🐕", "🐈", "🦁", "🐷", "🦔", "🐥", "🐡", "🐙", "🍣", "🕌", "🌟", "🔥", "🌊", "🎃", "✨", "🎉", "⛳", "🔖", "📝", "🗂", "📌"];
    return emojiList[Math.floor(Math.random() * emojiList.length)];
};
function parseArgs(argv) {
    try {
        return arg_1.default({
            // Types
            '--slug': String,
            '--title': String,
            '--type': String,
            '--emoji': String,
            '--published': String,
            '--machine-readable': Boolean,
            '--help': Boolean,
            // Alias
            '-h': '--help',
        }, { argv: argv });
    }
    catch (err) {
        if (err.code === 'ARG_UNKNOWN_OPTION') {
            Log.error(messages_1.invalidOptionText);
        }
        else {
            Log.error('引数のパース時にエラーが発生しました');
            console.log(err);
        }
        console.log(messages_1.newArticleHelpText);
        process.exit(0);
    }
}
var exec = function (argv) {
    var args = parseArgs(argv);
    if (args['--help']) {
        console.log(messages_1.newArticleHelpText);
        return;
    }
    var slug = args['--slug'] || helper_1.generateSlug();
    var title = args['--title'] || '';
    var emoji = args['--emoji'] || pickRandomEmoji();
    var type = args['--type'] === 'idea' ? 'idea' : 'tech';
    var published = args['--published'] === 'true' ? 'true' : 'false'; // デフォルトはfalse
    var machineReadable = args['--machine-readable'] === true;
    if (!helper_2.validateSlug(slug)) {
        Log.error(helper_2.getSlugErrorMessage(slug));
        return process.exit(1);
    }
    var fileName = slug + ".md";
    var relativeFilePath = "articles/" + fileName;
    var fullFilepath = helper_1.getWorkingPath(relativeFilePath);
    var fileBody = [
        '---',
        "title: \"" + title.replace(/"/g, '\\"') + "\"",
        "emoji: \"" + emoji + "\"",
        "type: \"" + type + "\" # tech: \u6280\u8853\u8A18\u4E8B / idea: \u30A2\u30A4\u30C7\u30A2",
        'topics: []',
        "published: " + published,
        '---',
    ].join('\n') + '\n';
    try {
        helper_1.generateFileIfNotExist(fullFilepath, fileBody);
        if (machineReadable) {
            console.log(relativeFilePath);
        }
        else {
            Log.created(relativeFilePath);
        }
    }
    catch (err) {
        Log.error('記事のファイル作成時にエラーが発生しました');
        console.error(err);
        process.exit(1);
    }
};
exports.exec = exec;
