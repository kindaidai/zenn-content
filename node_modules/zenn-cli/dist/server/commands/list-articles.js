"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.exec = void 0;
var arg_1 = __importDefault(require("arg"));
var messages_1 = require("../lib/messages");
var articles_1 = require("../lib/articles");
var Log = __importStar(require("../lib/log"));
function parseArgs(argv) {
    try {
        return arg_1.default({
            // Types
            '--format': String,
            '--help': Boolean,
            // Alias
            '-h': '--help',
        }, { argv: argv });
    }
    catch (e) {
        if (e.code === 'ARG_UNKNOWN_OPTION') {
            Log.error(messages_1.invalidOptionText);
        }
        else {
            Log.error('原因不明のエラーが発生しました');
        }
        console.log(messages_1.listArticlesHelpText);
        return null;
    }
}
var articleFormatters = {
    tsv: function (articleMeta) {
        return articleMeta.slug + (articleMeta.title ? '\t' + articleMeta.title : '');
    },
    json: function (articleMeta) { return JSON.stringify(articleMeta); },
};
var exec = function (argv) {
    var args = parseArgs(argv);
    if (!args)
        return;
    if (args['--help']) {
        console.log(messages_1.listArticlesHelpText);
        return;
    }
    var format = args['--format'] || 'tsv';
    if (!(format in articleFormatters)) {
        Log.error("format\u306E\u5024\uFF08" + format + "\uFF09\u304C\u4E0D\u6B63\u3067\u3059\u3002\"tsv\" \u307E\u305F\u306F \"json\" \u3092\u6307\u5B9A\u3057\u3066\u304F\u3060\u3055\u3044");
        return process.exit(1);
    }
    var formatter = articleFormatters[format];
    var articleMetaList = articles_1.getLocalArticleMetaList();
    var output = (articleMetaList === null || articleMetaList === void 0 ? void 0 : articleMetaList.length)
        ? articleMetaList.map(function (article) { return formatter(article); }).join('\n')
        : 'No articles yet';
    console.log(output);
};
exports.exec = exec;
